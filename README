# 项目背景
当前对模型训练过程的展示还没有成熟的工具，希望在1.0版本完成基本的计算过程可视化，后续2.0版本可以可视化多机数据，并在3.0版本提供性能优化建议

# 当前进展
1、已经完成从profiler中取出graph数据，变成json格式
2、初步完成从json到dot文件转换，并将dot转成png
3、已支持采集tensor的metadata，如shape，device等；已支持采集内存生命周期和算子生命周期
4、已初步支持简易两层模型和resnet18模型

# 下一步目标
1、显示tensor的shape当前还有一个问题：同一个tensor经过view等操作之后shape有变化，此时shape只能显示其中之一
2、支持分层展示，目前展示了torch的最小层-aten层，当模型变得复杂时，比如划分block时，需要提供按block显示的方法，block内部再单独展示。思路是重新定义数据流图的节点为block（属于PyCall）

# 图像内容设计
1、第一类元素是tensor，相关的信息有category、device、ptr、shape、size、申请释放时间
2、第二类元素是单算子op，相关信息有name、开始结束时间
3、第三类元素是通信算子，相关信息有name、开始结束时间
4、图中每个时间点可支配的资源有三种，一种是内存资源，同一时间内存在的内存大小总计不能超过内存资源；一种是处理器资源，同一时间一个处理器只运行一个op；一种是带宽资源，两个device之间的信道同一时间只传输一份数据。第三类和第二类在图上的本质是一样的，可以合并。对于单卡内计算，可以把通信算子切断

# 使用方法
graphviz安装包：https://graphviz.org/download/
python main.py [train_model_name]
